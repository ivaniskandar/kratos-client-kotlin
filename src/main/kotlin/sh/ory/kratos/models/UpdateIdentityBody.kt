/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.kratos.models

import sh.ory.kratos.models.IdentityWithCredentials

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual
import kotlinx.serialization.json.JsonObject

/**
 * Update Identity Body
 *
 * @param schemaId SchemaID is the ID of the JSON Schema to be used for validating the identity's traits. If set will update the Identity's SchemaID.
 * @param state State is the identity's state. active StateActive inactive StateInactive
 * @param traits Traits represent an identity's traits. The identity is able to create, modify, and delete traits in a self-service manner. The input will always be validated against the JSON Schema defined in `schema_id`.
 * @param credentials 
 * @param metadataAdmin Store metadata about the user which is only accessible through admin APIs such as `GET /admin/identities/<id>`.
 * @param metadataPublic Store metadata about the identity which the identity itself can see when calling for example the session endpoint. Do not store sensitive information (e.g. credit score) about the identity in this field.
 */
@Serializable

data class UpdateIdentityBody (

    /* SchemaID is the ID of the JSON Schema to be used for validating the identity's traits. If set will update the Identity's SchemaID. */
    @SerialName(value = "schema_id")
    val schemaId: kotlin.String,

    /* State is the identity's state. active StateActive inactive StateInactive */
    @SerialName(value = "state")
    val state: UpdateIdentityBody.State,

    /* Traits represent an identity's traits. The identity is able to create, modify, and delete traits in a self-service manner. The input will always be validated against the JSON Schema defined in `schema_id`. */
    @Contextual @SerialName(value = "traits")
    val traits: JsonObject,

    @SerialName(value = "credentials")
    val credentials: IdentityWithCredentials? = null,

    /* Store metadata about the user which is only accessible through admin APIs such as `GET /admin/identities/<id>`. */
    @Contextual @SerialName(value = "metadata_admin")
    val metadataAdmin: JsonObject? = null,

    /* Store metadata about the identity which the identity itself can see when calling for example the session endpoint. Do not store sensitive information (e.g. credit score) about the identity in this field. */
    @Contextual @SerialName(value = "metadata_public")
    val metadataPublic: JsonObject? = null

) {

    /**
     * State is the identity's state. active StateActive inactive StateInactive
     *
     * Values: ACTIVE,INACTIVE
     */
    @Serializable
    enum class State(val value: kotlin.String) {
        @SerialName(value = "active") ACTIVE("active"),
        @SerialName(value = "inactive") INACTIVE("inactive");
    }

}

